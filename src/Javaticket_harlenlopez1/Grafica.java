/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Javaticket_harlenlopez1;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author harle
 */
public class Grafica extends javax.swing.JPanel {

    /**
     * Creates new form Grafica
     */
    boolean bandera = true;
    double deporte,musical,religioso;
    public Grafica(double deporte, double musical, double religioso) {
        initComponents();
        this.deporte = deporte;
        this.musical = musical;
        this.religioso = religioso;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 719, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

public int maxVal(int rojo, int verde, int azul){
        if(rojo > verde && rojo > azul){
            return rojo; 
        }else if(verde > azul){
            return verde;
        }
        return azul;
    }
    
    public void paint(Graphics g){
        super.paint(g);
        if(bandera == true){
           
            
            int rojo = (int)deporte;
            int verde = (int)musical;
            int azul = (int)religioso;
            
            int maxValor = maxVal(rojo,verde, azul);
            int escala = maxValor/4;
            
            int largo_rojo = rojo * 400/maxValor;
            int largo_verde = verde * 400/maxValor;
            int largo_azul = azul * 400/maxValor;
            
            g.setColor(Color.red);
            g.fillRect(100, 100, largo_rojo, 40);
            g.drawString("Color Rojo", 10, 125);
            g.setColor(Color.green);
            g.fillRect(100, 150, largo_verde, 40);
            g.drawString("Color Verde", 10, 175);
            g.setColor(Color.blue);
            g.fillRect(100, 200, largo_azul, 40);
            g.drawString("Color Azul", 10, 225);
            
            for(int i=1; i<=5;i++){
                if(i == 1)
                    g.drawString("0", 100, 250);
                
                g.drawString(Integer.toString(escala*(i-1)), 100*i, 250);}
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
